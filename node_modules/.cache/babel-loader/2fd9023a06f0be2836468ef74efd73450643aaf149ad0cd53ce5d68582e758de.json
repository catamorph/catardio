{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import myImage from\"../assets/catardio.png\";// Replace this path with your image\nimport{jsx as _jsx}from\"react/jsx-runtime\";const BouncingImages=()=>{const numImages=10;const[images,setImages]=useState([]);// Initialize or reset images with random positions and velocities\nconst resetImages=()=>{setImages(Array.from({length:numImages}).map(()=>({x:Math.random()*(window.innerWidth-100),// Avoid starting too close to the edge\ny:Math.random()*(window.innerHeight-100),vx:(Math.random()-0.5)*10,// Velocity in pixels per frame\nvy:(Math.random()-0.5)*10})));};useEffect(()=>{resetImages();// Update function moves each image and checks for collisions\nconst update=()=>{setImages(currentImages=>currentImages.map(img=>{let{x,y,vx,vy}=img;x+=vx;y+=vy;// Check for collisions with the viewport boundaries\nif(x<=0||x>=window.innerWidth-100)vx*=-1;if(y<=0||y>=window.innerHeight-100)vy*=-1;return{x,y,vx,vy};}));};const intervalId=setInterval(update,20);// Update every 20ms (~50 frames per second)\nreturn()=>clearInterval(intervalId);},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"bouncing-images-container\",children:images.map((img,index)=>/*#__PURE__*/_jsx(\"img\",{src:myImage,className:\"bouncing-image\",alt:\"Bouncing\",style:{left:\"\".concat(img.x,\"px\"),top:\"\".concat(img.y,\"px\")}},index))});};export default BouncingImages;","map":{"version":3,"names":["React","useEffect","useState","myImage","jsx","_jsx","BouncingImages","numImages","images","setImages","resetImages","Array","from","length","map","x","Math","random","window","innerWidth","y","innerHeight","vx","vy","update","currentImages","img","intervalId","setInterval","clearInterval","className","children","index","src","alt","style","left","concat","top"],"sources":["/Users/adamalmqvist/dev/nodeTest/zod/catardio/src/components/catardios.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport myImage from \"../assets/catardio.png\"; // Replace this path with your image\n\nconst BouncingImages = () => {\n  const numImages = 10;\n  const [images, setImages] = useState([]);\n\n  // Initialize or reset images with random positions and velocities\n  const resetImages = () => {\n    setImages(\n      Array.from({ length: numImages }).map(() => ({\n        x: Math.random() * (window.innerWidth - 100), // Avoid starting too close to the edge\n        y: Math.random() * (window.innerHeight - 100),\n        vx: (Math.random() - 0.5) * 10, // Velocity in pixels per frame\n        vy: (Math.random() - 0.5) * 10,\n      }))\n    );\n  };\n\n  useEffect(() => {\n    resetImages();\n    // Update function moves each image and checks for collisions\n    const update = () => {\n      setImages((currentImages) =>\n        currentImages.map((img) => {\n          let { x, y, vx, vy } = img;\n          x += vx;\n          y += vy;\n\n          // Check for collisions with the viewport boundaries\n          if (x <= 0 || x >= window.innerWidth - 100) vx *= -1;\n          if (y <= 0 || y >= window.innerHeight - 100) vy *= -1;\n\n          return { x, y, vx, vy };\n        })\n      );\n    };\n\n    const intervalId = setInterval(update, 20); // Update every 20ms (~50 frames per second)\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div className=\"bouncing-images-container\">\n      {images.map((img, index) => (\n        <img\n          key={index}\n          src={myImage}\n          className=\"bouncing-image\"\n          alt=\"Bouncing\"\n          style={{\n            left: `${img.x}px`,\n            top: `${img.y}px`,\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default BouncingImages;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,OAAO,KAAM,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,SAAS,CAAG,EAAE,CACpB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAExC;AACA,KAAM,CAAAQ,WAAW,CAAGA,CAAA,GAAM,CACxBD,SAAS,CACPE,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAEN,SAAU,CAAC,CAAC,CAACO,GAAG,CAAC,KAAO,CAC3CC,CAAC,CAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,EAAIC,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CAAE;AAC9CC,CAAC,CAAEJ,IAAI,CAACC,MAAM,CAAC,CAAC,EAAIC,MAAM,CAACG,WAAW,CAAG,GAAG,CAAC,CAC7CC,EAAE,CAAE,CAACN,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,EAAI,EAAE,CAAE;AAChCM,EAAE,CAAE,CAACP,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,EAAI,EAC9B,CAAC,CAAC,CACJ,CAAC,CACH,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACdS,WAAW,CAAC,CAAC,CACb;AACA,KAAM,CAAAc,MAAM,CAAGA,CAAA,GAAM,CACnBf,SAAS,CAAEgB,aAAa,EACtBA,aAAa,CAACX,GAAG,CAAEY,GAAG,EAAK,CACzB,GAAI,CAAEX,CAAC,CAAEK,CAAC,CAAEE,EAAE,CAAEC,EAAG,CAAC,CAAGG,GAAG,CAC1BX,CAAC,EAAIO,EAAE,CACPF,CAAC,EAAIG,EAAE,CAEP;AACA,GAAIR,CAAC,EAAI,CAAC,EAAIA,CAAC,EAAIG,MAAM,CAACC,UAAU,CAAG,GAAG,CAAEG,EAAE,EAAI,CAAC,CAAC,CACpD,GAAIF,CAAC,EAAI,CAAC,EAAIA,CAAC,EAAIF,MAAM,CAACG,WAAW,CAAG,GAAG,CAAEE,EAAE,EAAI,CAAC,CAAC,CAErD,MAAO,CAAER,CAAC,CAAEK,CAAC,CAAEE,EAAE,CAAEC,EAAG,CAAC,CACzB,CAAC,CACH,CAAC,CACH,CAAC,CAED,KAAM,CAAAI,UAAU,CAAGC,WAAW,CAACJ,MAAM,CAAE,EAAE,CAAC,CAAE;AAC5C,MAAO,IAAMK,aAAa,CAACF,UAAU,CAAC,CACxC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEtB,IAAA,QAAKyB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CACvCvB,MAAM,CAACM,GAAG,CAAC,CAACY,GAAG,CAAEM,KAAK,gBACrB3B,IAAA,QAEE4B,GAAG,CAAE9B,OAAQ,CACb2B,SAAS,CAAC,gBAAgB,CAC1BI,GAAG,CAAC,UAAU,CACdC,KAAK,CAAE,CACLC,IAAI,IAAAC,MAAA,CAAKX,GAAG,CAACX,CAAC,MAAI,CAClBuB,GAAG,IAAAD,MAAA,CAAKX,GAAG,CAACN,CAAC,MACf,CAAE,EAPGY,KAQN,CACF,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}